version: 2

xcode_version: &xcode_version 9.3
iphone_name: &iphone_name iPhone 8
ios_version: &ios_version 11.3
opentok_version: &opentok_version 2.10.2
preload_simulator: &preload_simulator xcrun instruments -w 'iPhone 8 (11.3) [5FEDB80B-4688-4334-8B56-77D413CF00DC]' || true

base_job: &base_job
  macos:
    xcode: "9.3.0"
  working_directory: ~/kickstarter
  environment:
    CIRCLE_ARTIFACTS: /tmp
    BUNDLE_PATH: vendor/bundle
    FL_OUTPUT_DIR: output
    LC_ALL: en_US.UTF-8
    LANG: en_US.UTF-8
    OPENTOK_VERSION: *opentok_version
    IOS_VERSION: *ios_version
    IPHONE_NAME: *iphone_name
    XCODE_VERSION: *xcode_version

jobs:
  swiftlint-and-cache:
    <<: *base_job
    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-

      - checkout

      - restore_cache:
          keys:
            - opentok-cache-{{ checksum "Opentok.lock" }}

      - run:
          name: Make bootstrap
          command: make bootstrap

      - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"

      - save_cache:
          key: opentok-cache-{{ checksum "Opentok.lock" }}
          paths:
            - "Frameworks/OpenTok"

      - run:
          name: SwiftLint
          command: make lint

      - store_artifacts:
          path: /tmp/swiftlint-report.json

  # Kickstarter tests
  kickstarter-tests:
    <<: *base_job
    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-

      - checkout

      - restore_cache:
          keys:
            - opentok-cache-{{ checksum "Opentok.lock" }}

      - run:
          name: Make bootstrap
          command: make bootstrap

      - run:
          name: Pre-load simulator
          command: *preload_simulator

      - run:
          name: Kickstarter tests
          command: PLATFORM=iOS make test

      - store_artifacts:
          path: /tmp/xcode_raw.log
      - store_artifacts:
          path: /tmp/FailureDiffs

  # Library tests
  library-tests:
    <<: *base_job
    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-

      - checkout

      - restore_cache:
          keys:
            - opentok-cache-{{ checksum "Opentok.lock" }}

      - run:
          name: Make bootstrap
          command: make bootstrap

      - run:
          name: Pre-load simulator
          command: *preload_simulator

      - run:
          name: Library tests
          command: PLATFORM=iOS TARGET=Library make test

      - store_artifacts:
          path: /tmp/xcode_raw.log

  # LiveStream tests
  livestream-tests:
    <<: *base_job
    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-

      - checkout

      - restore_cache:
          keys:
            - opentok-cache-{{ checksum "Opentok.lock" }}

      - run:
          name: Make bootstrap
          command: make bootstrap

      - run:
          name: Pre-load simulator
          command: *preload_simulator

      - run:
          name: LiveStream tests
          command: SCHEME=LiveStream make test

      - store_artifacts:
          path: /tmp/xcode_raw.log

  # KsApi tests
  ksapi-tests:
    <<: *base_job
    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-

      - checkout

      - restore_cache:
          keys:
            - opentok-cache-{{ checksum "Opentok.lock" }}

      - run:
          name: Make bootstrap
          command: make bootstrap

      - run:
          name: Pre-load simulator
          command: *preload_simulator

      - run:
          name: KsApi tests
          command: SCHEME=KsApi make test

      - store_artifacts:
          path: /tmp/xcode_raw.log

  # Hockey
  beta:
    <<: *base_job
    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-

      - checkout

      - restore_cache:
          keys:
            - opentok-cache-{{ checksum "Opentok.lock" }}

      - run:
          name: Make bootstrap
          command: make bootstrap

      - restore_cache:
          keys:
            - v1-gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Bundle install
          command: bundle check || bundle install
          environment:
            BUNDLE_JOBS: 4
            BUNDLE_RETRY: 3
      - save_cache:
          key: v1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Increment build number
          command: agvtool new-version -all $(($(date +%s)/100))

      - run:
          name: Fastlane
          command: bundle exec fastlane beta_match_gym_hockey --verbose
          no_output_timeout: "30m" # 30 minutes

      - store_artifacts:
          path: /tmp/xcode_raw.log

      - store_artifacts:
          path: output

  # iTunes
  itunes:
    <<: *base_job
    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-

      - checkout

      - restore_cache:
          keys:
            - opentok-cache-{{ checksum "Opentok.lock" }}

      - run:
          name: Make bootstrap
          command: make bootstrap

      - restore_cache:
          keys:
            - v1-gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Bundle install
          command: bundle check || bundle install
          environment:
            BUNDLE_JOBS: 4
            BUNDLE_RETRY: 3
      - save_cache:
          key: v1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Increment build number
          command: agvtool new-version -all $(($(date +%s)/100))

      - run:
          name: Fastlane
          command: bundle exec fastlane itunes_match_gym_deliver_hockey --verbose
          no_output_timeout: "30m" # 30 minutes

      - store_artifacts:
          path: /tmp/xcode_raw.log

      - store_artifacts:
          path: output

# Workflows
workflows:
  version: 2
  build:
    jobs:
      - swiftlint-and-cache
      - kickstarter-tests
      - library-tests
      - livestream-tests
      - ksapi-tests
      - beta:
          filters:
            branches:
              only: beta-dist
          requires:
            - swiftlint-and-cache
            - kickstarter-tests
            - library-tests
            - livestream-tests
            - ksapi-tests
      - itunes:
          filters:
            branches:
              only: itunes-dist
          requires:
            - swiftlint-and-cache
            - kickstarter-tests
            - library-tests
            - livestream-tests
            - ksapi-tests

experimental:
  notify:
    branches:
      only:
        - master
        - beta-dist
        - itunes-dist
